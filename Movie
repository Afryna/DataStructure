
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;

/**
 *
 * @author afryn
 */
public class Movie {
    private static final long serialVersionUID=7832328826172497657L;

    private String team1;

    private String team2;

    private int hour;

    private int minute;

    private int day;

    private Tickets t;

    
    private Movie next;
    
    public Movie() {

        t=new Tickets();

    }


    public Movie(String team1, int hour, int minute, int day, Movie next) {

        this.team1 = team1;

        this.hour = hour;

        this.minute = minute;

        this.day = day;

    }


    public Movie(String team1, int hour, int minute, int day) {

        this.team1 = team1;
        
        this.hour = hour;

        this.minute = minute;

        this.day = day;

    }


    public Movie getNext() {

        return next;

    }


    public void setNext(Movie next) {

        this.next = next;

    }

    
    public void setDetails(String team1, int hour, int minute, int day){

        this.team1 = team1;

        this.hour = hour;

        this.minute = minute;

        this.day = day;

    }

  
    
    public boolean isNotOver(){

        Calendar cal = Calendar.getInstance();


        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");

        //System.out.println( sdf.format(cal.getTime()) );

        
        String[] time=sdf.format(cal.getTime()).split(":");

        int curhour = Integer.parseInt(time[0]);

        int curminute = Integer.parseInt(time[1]);

        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        LocalDate localDate = LocalDate.now();

        //System.out.println(dtf.format(localDate));

        
        String[] date=dtf.format(localDate).split("/");

        int curday = Integer.parseInt(date[0]);
        
        
      if(this.day==curday){

                    if(this.hour>curhour)

                        return true;

                    else if(this.hour==curhour){

                        if(this.minute>curminute)

                            return true;

                        else if(this.minute==curminute)

                            return true;

                    }

                }

            }
            
            return false;
   
        }
   
    }

    
    public void bookticket(){

        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

        
    }

    
    public void booktickets(Ticket t1){

               throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.


    }

    
    public void cancelticket(){

               throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.


    }

    
    //public void displayStat(){

      // t.displaySt();
    //}

}
